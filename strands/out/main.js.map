{
  "version": 3,
  "sources": ["../tempts/modules/common.ts", "../tempts/board.ts", "../tempts/modules/modal.ts", "../tempts/multi.ts", "../tempts/load.ts", "../tempts/main.ts"],
  "sourcesContent": ["declare var window: Window;\n\nexport function toDateString(date: Date): string {\n    const locale = window.language || (window as any).navigator.userLanguage || window.navigator.language;\n    const t12 = document.getElementById(\"lang-12h\") as HTMLInputElement;\n    const t24 = document.getElementById(\"lang-24h\") as HTMLInputElement;\n    let args1 = {};\n    let args2: Intl.DateTimeFormatOptions = {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    };\n    if (t12 && t24) {\n        if (t12.checked) {\n            args1[\"hour12\"] = true;\n            args2[\"hour12\"] = true;\n        } else if (t24.checked) {\n            args1[\"hour12\"] = false;\n            args2[\"hour12\"] = false;\n        }\n    }\n    return date.toLocaleDateString(locale, args1) + \" \" + date.toLocaleString(locale, args2);\n}\n\nexport const _get = (url: string, data: Object, onreadystatechange: (req: XMLHttpRequest) => void): void => {\n    let req = new XMLHttpRequest();\n    if (window.URLBase) { url = window.URLBase + url; }\n    req.open(\"GET\", url, true);\n    req.responseType = 'json';\n    req.setRequestHeader(\"Authorization\", \"Bearer \" + window.token);\n    req.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    req.onreadystatechange = () => {\n        if (req.status == 0) {\n            window.notifications.connectionError();\n            return;\n        } else if (req.status == 401) {\n            window.notifications.customError(\"401Error\", window.lang.notif(\"error401Unauthorized\"));\n        }\n        onreadystatechange(req);\n    };\n    req.send(JSON.stringify(data));\n};\n\nexport const _post = (url: string, data: Object, onreadystatechange: (req: XMLHttpRequest) => void, response?: boolean, statusHandler?: (req: XMLHttpRequest) => void): void => {\n    let req = new XMLHttpRequest();\n    req.open(\"POST\", window.URLBase + url, true);\n    if (response) {\n        req.responseType = 'json';\n    }\n    req.setRequestHeader(\"Authorization\", \"Bearer \" + window.token);\n    req.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    req.onreadystatechange = () => {\n        if (statusHandler) { statusHandler(req); }\n        else if (req.status == 0) {\n            window.notifications.connectionError();\n            return;\n        } else if (req.status == 401) {\n            window.notifications.customError(\"401Error\", window.lang.notif(\"error401Unauthorized\"));\n        }\n        onreadystatechange(req);\n    };\n    req.send(JSON.stringify(data));\n};\n\nexport function _delete(url: string, data: Object, onreadystatechange: (req: XMLHttpRequest) => void): void {\n    let req = new XMLHttpRequest();\n    req.open(\"DELETE\", window.URLBase + url, true);\n    req.setRequestHeader(\"Authorization\", \"Bearer \" + window.token);\n    req.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    req.onreadystatechange = () => {\n        if (req.status == 0) {\n            window.notifications.connectionError();\n            return;\n        } else if (req.status == 401) {\n            window.notifications.customError(\"401Error\", window.lang.notif(\"error401Unauthorized\"));\n        }\n        onreadystatechange(req);\n    };\n    req.send(JSON.stringify(data));\n}\n\nexport function toClipboard (str: string) {\n    const el = document.createElement('textarea') as HTMLTextAreaElement;\n    el.value = str;\n    el.readOnly = true;\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    if (selected) {\n        document.getSelection().removeAllRanges();\n        document.getSelection().addRange(selected);\n    }\n}\n\nexport class notificationBox implements NotificationBox {\n    private _box: HTMLDivElement;\n    private _errorTypes: { [type: string]: boolean } = {};\n    private _positiveTypes: { [type: string]: boolean } = {};\n    private _infoTypes: { [type: string]: boolean } = {};\n    timeout: number;\n    constructor(box: HTMLDivElement, timeout?: number) { this._box = box; this.timeout = timeout || 5; }\n\n    private _error = (message: string): HTMLElement => {\n        const noti = document.createElement('aside');\n        noti.classList.add(\"aside\", \"~critical\", \"@low\", \"mt-2\", \"notification-error\");\n        let error = \"\";\n        if (window.lang) {\n            error = window.lang.strings(\"error\") + \":\"\n        }\n        noti.innerHTML = `<strong>${error}</strong> ${message}`;\n        const closeButton = document.createElement('span') as HTMLSpanElement;\n        closeButton.classList.add(\"button\", \"~critical\", \"@low\", \"ml-4\");\n        closeButton.innerHTML = `<i class=\"icon ri-close-line\"></i>`;\n        closeButton.onclick = () => this._close(noti);\n        noti.classList.add(\"animate-slide-in\");\n        noti.appendChild(closeButton);\n        return noti;\n    }\n    \n    private _positive = (bold: string, message: string): HTMLElement => {\n        const noti = document.createElement('aside');\n        noti.classList.add(\"aside\", \"~positive\", \"@low\", \"mt-2\", \"notification-positive\");\n        noti.innerHTML = `<strong>${bold}</strong> ${message}`;\n        const closeButton = document.createElement('span') as HTMLSpanElement;\n        closeButton.classList.add(\"button\", \"~positive\", \"@low\", \"ml-4\");\n        closeButton.innerHTML = `<i class=\"icon ri-close-line\"></i>`;\n        closeButton.onclick = () => this._close(noti); \n        noti.classList.add(\"animate-slide-in\");\n        noti.appendChild(closeButton);\n        return noti;\n    }\n    \n    private _info = (bold: string, message: string): HTMLElement => {\n        const noti = document.createElement('aside');\n        noti.classList.add(\"aside\", \"~info\", \"@low\", \"mt-2\", \"notification-info\");\n        noti.innerHTML = `<strong>${bold}</strong> ${message}`;\n        const closeButton = document.createElement('span') as HTMLSpanElement;\n        closeButton.classList.add(\"button\", \"~info\", \"@low\", \"ml-4\");\n        closeButton.innerHTML = `<i class=\"icon ri-close-line\"></i>`;\n        closeButton.onclick = () => this._close(noti); \n        noti.classList.add(\"animate-slide-in\");\n        noti.appendChild(closeButton);\n        return noti;\n    }\n    \n    private _close = (noti: HTMLElement) => {\n        noti.classList.remove(\"animate-slide-in\");\n        noti.classList.add(\"animate-slide-out\");\n        noti.addEventListener(window.animationEvent, () => {\n            this._box.removeChild(noti); \n        }, false);\n    }\n\n    \n    connectionError = () => { this.customError(\"connectionError\", window.lang.notif(\"errorConnection\")); }\n\n    customError = (type: string, message: string) => {\n        this._errorTypes[type] = this._errorTypes[type] || false;\n        const noti = this._error(message);\n        noti.classList.add(\"error-\" + type);\n        const previousNoti: HTMLElement | undefined = this._box.querySelector(\"aside.error-\" + type);\n        if (this._errorTypes[type] && previousNoti !== undefined && previousNoti != null) {\n            this._box.removeChild(previousNoti);\n            noti.classList.add(\"animate-pulsate\");\n            noti.classList.remove(\"animate-slide-in\");\n        }\n        this._box.appendChild(noti);\n        this._errorTypes[type] = true;\n        setTimeout(() => { if (this._box.contains(noti)) { this._close(noti); this._errorTypes[type] = false; } }, this.timeout*1000);\n    }\n    \n    customPositive = (type: string, bold: string, message: string) => {\n        this._positiveTypes[type] = this._positiveTypes[type] || false;\n        const noti = this._positive(bold, message);\n        noti.classList.add(\"positive-\" + type);\n        const previousNoti: HTMLElement | undefined = this._box.querySelector(\"aside.positive-\" + type);\n        if (this._positiveTypes[type] && previousNoti !== undefined && previousNoti != null) {\n            this._box.removeChild(previousNoti);\n            noti.classList.add(\"animate-pulsate\");\n            noti.classList.remove(\"animate-slide-in\");\n        }\n        this._box.appendChild(noti);\n        this._positiveTypes[type] = true;\n        setTimeout(() => { if (this._box.contains(noti)) { this._close(noti); this._positiveTypes[type] = false; } }, this.timeout*1000);\n    }\n\n    customSuccess = (type: string, message: string) => this.customPositive(type, (window.lang ? window.lang.strings(\"success\") : \"Success\") + \":\", message)\n    \n    customInfo = (type: string, bold: string, message: string) => {\n        this._infoTypes[type] = this._infoTypes[type] || false;\n        const noti = this._info(bold, message);\n        noti.classList.add(\"info-\" + type);\n        const previousNoti: HTMLElement | undefined = this._box.querySelector(\"aside.info-\" + type);\n        if (this._infoTypes[type] && previousNoti !== undefined && previousNoti != null) {\n            this._box.removeChild(previousNoti);\n            noti.classList.add(\"animate-pulsate\");\n            noti.classList.remove(\"animate-slide-in\");\n        }\n        this._box.appendChild(noti);\n        this._infoTypes[type] = true;\n        setTimeout(() => { if (this._box.contains(noti)) { this._close(noti); this._infoTypes[type] = false; } }, this.timeout*1000);\n    }\n}\n\nexport const whichAnimationEvent = () => {\n    const el = document.createElement(\"fakeElement\");\n    if (el.style[\"animation\"] !== void 0) {\n        return \"animationend\";\n    }\n    return \"webkitAnimationEnd\";\n}\n\nexport function toggleLoader(el: HTMLElement, small: boolean = true) {\n    if (el.classList.contains(\"loader\")) {\n        el.classList.remove(\"loader\");\n        el.classList.remove(\"loader-sm\");\n        const dot = el.querySelector(\"span.dot\");\n        if (dot) { dot.remove(); }\n    } else {\n        el.classList.add(\"loader\");\n        if (small) { el.classList.add(\"loader-sm\"); }\n        const dot = document.createElement(\"span\") as HTMLSpanElement;\n        dot.classList.add(\"dot\")\n        el.appendChild(dot);\n    }\n}\n\nexport function addLoader(el: HTMLElement, small: boolean = true, relative: boolean = false) {\n    if (!el.classList.contains(\"loader\")) {\n        el.classList.add(\"loader\");\n        if (relative) el.classList.add(\"rel\");\n        if (small) { el.classList.add(\"loader-sm\"); }\n        const dot = document.createElement(\"span\") as HTMLSpanElement;\n        dot.classList.add(\"dot\")\n        el.appendChild(dot);\n    }\n}\n\nexport function removeLoader(el: HTMLElement, small: boolean = true) {\n    if (el.classList.contains(\"loader\")) {\n        el.classList.remove(\"loader\");\n        el.classList.remove(\"loader-sm\");\n        el.classList.remove(\"rel\");\n        const dot = el.querySelector(\"span.dot\");\n        if (dot) { dot.remove(); }\n    }\n}\n\nexport function insertText(textarea: HTMLTextAreaElement, text: string) {\n    // https://kubyshkin.name/posts/insert-text-into-textarea-at-cursor-position <3\n    const isSuccess = document.execCommand(\"insertText\", false, text);\n\n    // Firefox (non-standard method)\n    if (!isSuccess && typeof textarea.setRangeText === \"function\") {\n        const start = textarea.selectionStart;\n        textarea.setRangeText(text);\n        // update cursor to be at the end of insertion\n        textarea.selectionStart = textarea.selectionEnd = start + text.length;\n\n        // Notify any possible listeners of the change\n        const e = document.createEvent(\"UIEvent\");\n        e.initEvent(\"input\", true, false);\n        textarea.dispatchEvent(e);\n        textarea.focus();\n    }\n}\n\nexport function splitByCharN(s: string, c: string, n: number) {\n    const str = [...s];\n    let out = [];\n    let accum = \"\";\n    for (let i = 0; i < str.length; i++) {\n        if (out.length < n && str[i] == c) {\n            if (accum != \"\") out.push(accum);\n            accum = \"\";\n        } else {\n            accum += str[i];\n        }\n    }\n    if (accum != \"\") out.push(accum);\n    return out;\n}\n\nexport function unicodeB64Decode(s: string): string {\n    const decoded = atob(s);\n    const byteArray = Uint8Array.from(decoded, (m) => m.codePointAt(0));\n    const toUnicode = new TextDecoder().decode(byteArray);\n    return toUnicode;\n}\n\nexport function unicodeB64Encode(s: string): string {\n    const encoded = new TextEncoder().encode(s);\n    const bin = String.fromCodePoint(...encoded);\n    return btoa(bin);\n}\n", "export class BoardData {\n    printDate: string;\n    id: number;\n    editor: string;\n    constructors: string;\n    spangram: string;\n    clue: string;\n    startingBoard: string[];\n    solutions: string[];\n    themeCoords: { [theme: string]: number[][] }; // number[2][]\n}\n\nexport function BoardCredits(board: BoardData): string {\n    if (board.editor == board.constructors || board.constructors == \"\") return board.editor;\n    return board.editor + \", \" + board.constructors;\n};\n\nexport interface BoardState {\n    themeWordsFound: string[];\n    spangramFound: boolean;\n    spangramCoords: number[][];\n    wordsToGetHint: number;\n    currentGuess: number[][];\n}\n\nexport interface BoardSummary {\n    date: string;\n    clue: string;\n    editor: string;\n}\n\nexport const defaultBoard: BoardData = {\n    printDate: \"2024-05-24\",\n    id: -1,\n    editor: \"Harvey Tindall\",\n    spangram: \"ALRIGHTY\",\n    clue: \"(Down)load a game below to start.\",\n    startingBoard: [\n        \"THIS-Y\",\n        \"ISNT-T\",\n        \"AREALH\",\n        \"BOARDG\",\n        \"LOAD-I\",\n        \"O-E--R\",\n        \"<N---L\",\n        \"OKAY?A\"\n    ],\n    \"solutions\": [\n        \"ALRIGHTY\",\n        \"THIS\",\n        \"ISNT\",\n        \"REAL\",\n        \"BOARD\",\n        \"LOAD\",\n        \"ONE\",\n        \"OKAY\",\n        \"BOAR\",\n        \"EAR\",\n        \"ALRIGHT\",\n        \"LONE\",\n        \"OK\"\n    ],\n    \"themeCoords\": {\n        \"THIS\": [[0, 0], [0, 1], [0, 2], [0, 3]],\n        \"ISNT\": [[1, 0], [1, 1], [1, 2], [1, 3]],\n        \"REAL\": [[2, 1], [2, 2], [2, 3], [2, 4]],\n        \"BOARD\": [[3, 0], [3, 1], [3, 2], [3, 3], [3, 4]],\n        \"LOAD\": [[4, 0], [4, 1], [4, 2], [4, 3]],\n        \"ONE\": [[5, 0], [6, 1], [5, 2]],\n        \"OKAY\": [[7, 0], [7, 1], [7, 2], [7, 3]]\n    }\n};\n", "declare var window: Window;\n\nexport class Modal implements Modal {\n    modal: HTMLElement;\n    closeButton: HTMLSpanElement;\n    openEvent: CustomEvent;\n    closeEvent: CustomEvent;\n    constructor(modal: HTMLElement, important: boolean = false) {\n        this.modal = modal;\n        this.openEvent = new CustomEvent(\"modal-open-\" + modal.id);\n        this.closeEvent = new CustomEvent(\"modal-close-\" + modal.id);\n        const closeButton = this.modal.querySelector('span.modal-close');\n        if (closeButton !== null) {\n            this.closeButton = closeButton as HTMLSpanElement;\n            this.closeButton.onclick = this.close;\n        }\n        if (!important) {\n            window.addEventListener('click', (event: Event) => {\n                if (event.target == this.modal) { this.close(); }\n            });\n        }\n    }\n    close = (event?: Event) => {\n        if (!this.modal.classList.contains(\"block\")) return;\n        if (event) {\n            event.preventDefault();\n        }\n        this.modal.classList.add('animate-fade-out');\n        this.modal.classList.remove(\"animate-fade-in\");\n        const modal = this.modal;\n        const listenerFunc = () => {\n            modal.classList.remove('block');\n            modal.classList.remove('animate-fade-out');\n            modal.removeEventListener(window.animationEvent, listenerFunc);\n            document.dispatchEvent(this.closeEvent);\n        };\n        this.modal.addEventListener(window.animationEvent, listenerFunc, false);\n    }\n\n    set onopen(f: () => void) {\n        document.addEventListener(\"modal-open-\"+this.modal.id, f);\n    }\n    set onclose(f: () => void) {\n        document.addEventListener(\"modal-close-\"+this.modal.id, f);\n    }\n\n    show = () => {\n        this.modal.classList.add('block', 'animate-fade-in');\n        document.dispatchEvent(this.openEvent);\n    }\n    toggle = () => {\n        if (this.modal.classList.contains('animate-fade-in')) {\n            this.close();\n        } else {\n            this.show();\n        }\n    }\n\n    asElement = () => { return this.modal; }\n}\n", "import { notificationBox, splitByCharN, unicodeB64Decode, unicodeB64Encode, toClipboard } from \"./modules/common.js\";\nimport { Modal } from \"./modules/modal.js\";\nimport { BoardData, BoardState, BoardSummary } from \"./board.js\";\nimport { HIGHLIGHT_STEP_DURATION } from \"./main.js\";\n\ntype UID = string;\ntype UserKey = string;\ntype RID = string;\n\n// import WebSocket from 'ws';\n\nconst JOIN_ROOM = \"Join\";\nconst LEAVE_ROOM = \"Leave\";\n\ninterface User {\n    uid: UID;\n    key: UserKey;\n    nick: string;\n    room: RID;\n}\n\ninterface Room {\n    rid: RID;\n    board: string;\n    nick: string;\n    password: string;\n}\n\ninterface RoomDescriptor {\n    nick: string;\n    password: boolean;\n    playerCount: number;\n}\n\nconst auth = (u: User) => `${u.uid} ${u.key}`;\n\nconst iPing = \"PONG\\n\";\nconst oPing = () => \"PING\\n\";\nconst oHello = () => \"HELLO\\n\";\nconst oHelloExistingUser = (u: User) => `HELLO ${auth(u)}\\n`;\nconst oNewRoom = (u: User, b64Name: string = \"\", b64Password: string = \"\") => `NEWROOM ${auth(u)} ${b64Name}${b64Password != \"\" ? \" \" + b64Password : \"\"}\\n`;\nconst oListRooms = () => \"ROOMS\\n\";\nconst oJoinRoom = (u: User, r: RID, b64Password: string = \"\") => `JOIN ${auth(u)} ${r}${b64Password != \"\" ? \" \" + b64Password : \"\"}\\n`;\nconst oLeaveRoom = (u: User) => `LEAVE ${auth(u)}\\n`;\nconst oSetBoard = (u: User, b64Board: string) => `SETBOARD ${auth(u)} ${b64Board}\\n`;\nconst oGetBoard = (u: User) => `BOARD ${auth(u)}\\n`;\nconst oDownloadBoard = (date: string) => `DLBOARD ${date}\\n`;\nconst oBoardSummaries = () => `BOARDSUMMARIES\\n`;\n\nconst oGuess = (u: User, x: number, y: number) => `GUESS ${auth(u)} ${x} ${y}\\n`;\nconst oEndGuess = (u: User) => `ENDGUESS ${auth(u)}\\n`;\nconst oHint = (u: User) => `HINT ${auth(u)}\\n`;\n\nconst oThemeWord = (w: string) => `TWORD ${w}\\n`;\nconst oSpangram = (coords: number[][]) => {\n    let out = `SPANGRAM`;\n    for (const pair of coords) {\n        out += ` ${pair[0]},${pair[1]}`;\n    }\n    out += `\\n`;\n    return out;\n}\nconst oCurrentGuess = (coords: number[][]) => {\n    let out = `CURRENTGUESS`;\n    for (const pair of coords) {\n        out += ` ${pair[0]},${pair[1]}`;\n    }\n    out += `\\n`;\n    return out;\n}\n\nconst oWordsToGetHint = (w: number) => `WORDSTOHINT ${w}\\n`;\n\nconst oGetState = (u: User) => `GETSTATE ${auth(u)}\\n`;\n\nconst oForward = (u: User, fu: User, msg: string) => `FORWARD ${auth(u)} ${fu.uid} ${msg}\\n`;\n\nconst iSuccess = \"COOL\\n\";\nconst iFail = \"NO\\n\";\nconst iStart = \"START\\n\";\nconst iFinished = \"END\\n\";\nconst iInvalid = \"INVALID\\n\";\n\nconst iHello = \"HELLO\";\nconst iNewRoom = \"NEWROOM\"\nconst iListRooms = \"ROOM\";\nconst iGetBoard = \"BOARD\";\nconst iBoardSummaries = \"BOARDSUMMARY\";\nconst iGuess = \"GUESS\";\nconst iEndGuess = \"ENDGUESS\\n\";\nconst iHint = \"HINT\\n\";\nconst iReqStateFromHost = \"HOSTSTATE\";\nconst iThemeWord = \"TWORD\";\nconst iSpangram = \"SPANGRAM\";\nconst iCurrentGuess = \"CURRENTGUESS\";\nconst iWordsToGetHint = \"WORDSTOHINT\";\nconst iNewHost = \"NEWHOST\\n\";\nconst iPlayerJoined = \"JOINED\";\nconst iPlayerLeft = \"LEFT\";\n\nexport class MultiplayerClient {\n    private _url: string;\n    user: User;\n    room: Room = {rid: \"\", board: \"\"};\n    host: boolean;\n    private _ws: WebSocket;\n    private _connected: boolean = false;\n    private _roomToJoin: RID;\n    private _successFunc: () => void = () => {};\n    private _failFunc: () => void = () => {};\n    private _endFunc: () => void = () => {};\n    private _invalidFunc: () => void = () => {};\n    private _roomJoinFunc: (success: boolean) => void = (success: boolean) => {};\n    private _newRoomFunc: (success: boolean) => void = (success: boolean) => {};\n\n    onGuess: (x: number, y: number) => void = (x: number, y: number) => { console.log(\"Guessed\", x, y); };\n    onEndGuess: () => void = () => { console.log(\"Guess ended!\"); };\n    onHintUsed: () => void = () => { console.log(\"Hint used!\"); };\n    onBoardRequest: () => BoardState;\n    onHostPromotion: () => void = () => { console.log(\"Became host.\"); };\n    onBoardStateThemeWord: (w: string) => void = (w: string) => { console.log(\"word:\", w); };\n    onBoardStateSpangram: (coords: number[][]) => void = (coords: number[][]) => { console.log(\"Spangram coords:\", coords); };\n    onBoardStateWordsToGetHint: (w: number) => void = (w: number) => { console.log(\"Words to get hint:\", w); };\n    onPlayerJoined: (u: UID) => void = (u: UID) => { console.log(\"Player\", u, \"joined.\"); };\n    onPlayerLeft: (u: UID) => void = (u: UID) => { console.log(\"Player\", u, \"left\"); };\n    onBoardSummaryAdded: (summary: BoardSummary) => void = (summary: BoardSummary) => { console.log(\"date\", summary.date, \"clue\", summary.clue, \"editor\", summary.editor); };\n    onBoardReceived: () => void = () => {};\n\n    private _callBacks: { [s: string]: () => void } = {};\n\n\n    roomList: { [rid: RID]: RoomDescriptor } = {}; // RID to no. of occupants\n\n    constructor(url: string) {\n        this._url = url;\n        // FIXME: Remove!\n        (window as any).cli = this;\n    }\n\n    connect = (then: () => void = () => {}) => {\n        \n    }\n\n    private _ping = () => {\n        this._ws.send(oPing());\n        if (this._connected) setTimeout(this._ping, 2 * 60000);\n    };\n\n    loginOrNewUser = (uid: UID, key: UserKey, then: () => void = () => {}) => {\n        this.cmdHelloExistingUser(uid, key, () => {\n            if (this.user.uid == \"\") { // Login failed\n                console.log(\"Creds invalid, making new ones\");\n                this.cmdHello(() => {\n                    then();\n                });\n            } else { then(); }\n        });\n    };\n    \n    cmdHelloExistingUser = (uid: UID, key: UserKey, then: () => void = () => {}) => {\n        this._callBacks[\"HELLO\"] = then;\n        this._invalidFunc = then;\n        this.user = {\n            uid: \"\",\n            key: \"\",\n            nick: \"\",\n            room: \"\"\n        };\n        const newUser: User = {\n            uid: uid,\n            key: key,\n            nick: \"\",\n            room: \"\"\n        };\n        this._ws.send(oHelloExistingUser(newUser));\n    };\n\n    cmdHello = (then: () => void = () => {}) => {\n        this._callBacks[\"HELLO\"] = then;\n        this._ws.send(oHello());\n    }\n\n    respHello = (args: string[]) => {\n        this.user = {\n            uid: args[1] as UID,\n            key: args[2] as UserKey,\n            nick: \"\",\n            room: \"\"\n        };\n        console.log(\"Logged in as\", this.user);\n        this._callBacks[\"HELLO\"]();\n    };\n\n    cmdNewRoom = (nickname: string = \"\", password: string = \"\", then: (success: boolean) => void = (success: boolean) => {}) => {\n        this._newRoomFunc = then;\n        this.room = { password: password } as Room;\n        this._ws.send(oNewRoom(this.user, unicodeB64Encode(nickname), unicodeB64Encode(password)));\n    }\n\n    respNewRoom = (args: string[]) => {\n        console.log(`Created new room \"${args[1]}\"`);\n        this.cmdJoinRoom(args[1] as RID, this.room.password, (success: boolean) => {\n            this.host = true;\n            this._newRoomFunc(success);\n        });\n    }\n\n    cmdJoinRoom = (rid: RID, password: string = \"\", then: (success: boolean) => void = () => {}) => {\n        this.host = false;\n        this._roomJoinFunc = then;\n        this._roomToJoin = rid;\n        this.room.rid = \"\";\n        this.room.board = \"\";\n        this.room.password = password;\n        this._successFunc = this.respJoinRoom;\n        this._invalidFunc = () => {\n            this._roomJoinFunc(false);\n        };\n        this._failFunc = this._invalidFunc;\n\n        this._ws.send(oJoinRoom(this.user, rid, unicodeB64Encode(password)));\n    }\n\n    respJoinRoom = () => {\n        this.user.room = this._roomToJoin;\n        let nick = \"\";\n        if (this._roomToJoin in this.roomList) {\n            nick = this.roomList[this._roomToJoin].nick;\n        }\n        this.room = {\n            rid: this._roomToJoin,\n            board: \"\",\n            nick: nick,\n            password: this.room.password\n        };\n        console.log(`Joined room \"${this.user.room}\"`);\n        this._roomJoinFunc(true);\n    }\n\n    cmdLeaveRoom = (then: () => void = () => {}) => {\n        this._successFunc = () => {\n            console.log(\"left room.\");\n            this.room = {rid: \"\", board: \"\", nick: \"\", password: \"\"};\n            then();\n        };\n        this._ws.send(oLeaveRoom(this.user));\n    }\n\n    cmdListRooms = (then: () => void = () => {}) => {\n        this._callBacks[\"LISTROOMS\"] = then;\n        this._ws.send(oListRooms());\n        this.roomList = {};\n        this._endFunc = () => {\n            console.log(\"Rooms:\", this.roomList);\n            this._callBacks[\"LISTROOMS\"]();\n        };\n    };\n\n    respListRooms = (args: string[]) => {\n        let nick = \"\";\n        let password = false;\n        if (args.length == 4) {\n            let nickPass = args[3].split(\" \", 2);\n            nick = nickPass[0];\n            password = (nickPass.length > 1 && nickPass[1] == \"PASSWORD\");\n        } else if (args.length == 5) {\n            nick = args[3];\n            password = args[4] == \"PASSWORD\";\n        }\n        this.roomList[args[1] as RID] = {\n            playerCount: +(args[2]),\n            nick: nick == \"NONE\" ? \"\" : unicodeB64Decode(nick),\n            password: password\n        }\n    };\n\n    cmdSetBoard = (board: string, then: () => void = () => {}) => {\n        if (this.room.rid == \"\") return;\n        this._callBacks[\"SETBOARD\"] = then;\n        this._ws.send(oSetBoard(this.user, unicodeB64Encode(board)));\n        this._successFunc = () => {\n            console.log(\"Sent board.\");\n            this._callBacks[\"SETBOARD\"]();\n        };\n    }\n\n    cmdGetBoard = (then: () => void = () => {}) => {\n        if (this.room.rid == \"\") return;\n        this._callBacks[\"GETBOARD\"] = () => {\n            this.onBoardReceived();\n            then();\n        };\n        this._ws.send(oGetBoard(this.user));\n        this._failFunc = () => {\n            this.onBoardReceived();\n            then();\n        };\n    }\n\n    respGetBoard = (args: string[]) => {\n        this.room.board = unicodeB64Decode(args[1]);\n        // console.log(\"Got board:\", this.room.board);\n        this._callBacks[\"GETBOARD\"]();\n    };\n\n    cmdGuess = (x: number, y: number) => {\n        if (this.room.rid == \"\") return;\n        this._ws.send(oGuess(this.user, x, y));\n    };\n\n    cmdEndGuess = () => {\n        if (this.room.rid == \"\") return;\n        this._ws.send(oEndGuess(this.user));\n    };\n\n    respGuess = (args: string[]) => {\n        let x = +(args[1]);\n        let y = +(args[2]);\n        this.onGuess(x, y);\n    };\n\n    respEndGuess = () => this.onEndGuess();\n\n    cmdHint = () => {\n        if (this.room.rid == \"\") return;\n        this._ws.send(oHint(this.user));\n    };\n\n    respHint = () => this.onHintUsed();\n\n    cmdGetState = () => {\n        if (this.room.rid == \"\") return;\n        this._ws.send(oGetState(this.user));\n    }\n\n    cmdDownloadBoard = (date: string, then: (board: string) => void = (board: string) => {}) => {\n        this._callBacks[\"GETBOARD\"] = () => {\n            // console.log(\"got board!\", this.room.board);\n            then(this.room.board);\n        };\n        this._failFunc = () => {\n            then(\"\");\n        };\n        this._ws.send(oDownloadBoard(date));\n    };\n\n    cmdBoardSummaries = () => {\n        this._ws.send(oBoardSummaries());\n    };\n\n    respBoardSummaries = (args: string[]) => {\n        let summary: BoardSummary = {\n            date: args[1],\n            clue: unicodeB64Decode(args[2]),\n            editor: unicodeB64Decode(args[3])\n        };\n        this.onBoardSummaryAdded(summary);\n    };\n\n    respReqStateFromHost = (args: string[]) => {\n        let target: User = {\n            uid: args[1] as UID,\n            key: \"\",\n            nick: \"\",\n            room: \"\"\n        };\n        const bd = this.onBoardRequest();\n        for (const w of bd.themeWordsFound) {\n            this._ws.send(oForward(this.user, target, oThemeWord(w)));\n        }\n        if (bd.spangramFound) {\n            this._ws.send(oForward(this.user, target, oSpangram(bd.spangramCoords)));\n        }\n        if (bd.currentGuess.length != 0) {\n            this._ws.send(oForward(this.user, target, oCurrentGuess(bd.currentGuess)));\n        }\n        this._ws.send(oForward(this.user, target, oWordsToGetHint(bd.wordsToGetHint)));\n    }\n\n    processIncomingCoords = (args: string[]): number[][] => {\n        let pairStrings = [];\n        for (let i = 1; i < args.length; i++) {\n            if (i == args.length-1) {\n                let split = args[i].split(\" \");\n                pairStrings = pairStrings.concat(split);\n            } else {\n                pairStrings.push(args[i]);\n            }\n        }\n        let coords: number[][] = [];\n        for (let i = 0; i < pairStrings.length; i++) {\n            let sc = pairStrings[i].split(\",\");\n            coords.push([+sc[0], +sc[1]]);\n        }\n        return coords\n    };\n\n    processSpangramCoords = (args: string[]) => {\n        const coords = this.processIncomingCoords(args);\n        this.onBoardStateSpangram(coords);\n    }\n\n    processCurrentGuess = (args: string[]) => {\n        const coords = this.processIncomingCoords(args);\n        // console.log(\"got coords\", coords);\n        let i = 0; \n        const addLoop = () => {\n            this.onGuess(coords[i][1], coords[i][0]);\n            i++\n            if (i != coords.length) setTimeout(addLoop, HIGHLIGHT_STEP_DURATION);\n        };\n        addLoop();\n    }\n}\n\ninterface window extends Window {\n    notif: notificationBox;\n}\n\ndeclare var window: window;\n\n\nexport class MultiplayerUI {\n    cli: MultiplayerClient;\n    board: string;\n    private _boardLoader: (board: BoardData) => void;\n    private _modal: Modal;\n        \n    onJoinRoom = (success: boolean = false) => {\n        if (!success) {\n            window.notif.customError(\"failedJoin\", \"Couldn't join room.\");\n            return;\n        }\n        this.cli.cmdGetBoard();\n        let url = this.urlFromRID(this.cli.room.rid, unicodeB64Encode(this.cli.room.password));\n        window.history.pushState({}, \"\", url);\n\n        this._modal.close();\n    }\n\n    onLeaveRoom = () => {\n        window.history.pushState({}, \"\", this.getBaseURL());\n        this._modal.close();\n        window.notif.customSuccess(\"roomLeft\", `Room left.`);\n    };\n\n    ridFromURL = (): RID => {\n        const urlParams = new URLSearchParams(window.location.search);\n        let r = urlParams.get(\"room\");\n        if (r) return r as RID;\n        else return \"\";\n        /* let s = window.location.href.split(\"?room=\");\n        if (s.length < 2) return \"\";\n        return s[s.length-1] as RID; */\n    };\n\n    passwordFromURL = (): string => {\n        const urlParams = new URLSearchParams(window.location.search);\n        let p = urlParams.get(\"password\");\n        if (p) return unicodeB64Decode(p);\n        else return \"\";\n        /* let s = window.location.href.split(\"&password=\");\n        if (s.length < 2) return \"\";\n        return unicodeB64Decode(s[s.length-1]); */\n    };\n\n    urlFromRID = (rid: RID, b64Password: string = \"\"): string => {\n        let url = window.location.href.split(\"?room=\")[0];\n        if (url.at(url.length-1) != \"/\") url += \"/\";\n        url += \"?room=\" + rid;\n        if (b64Password != \"\") {\n            url += `&password=` + b64Password;\n        }\n        return url;\n    };\n\n    getBaseURL = (): string => {\n        let s = window.location.href.split(\"?room=\");\n        return s[0];\n    };\n\n    connect = () => {\n        let uid = localStorage.getItem(\"uid\") as UID;\n        let ukey = localStorage.getItem(\"key\") as UserKey;\n        this.cli.connect(() => this.cli.loginOrNewUser(uid, ukey, () => {\n            localStorage.setItem(\"uid\", this.cli.user.uid);\n            localStorage.setItem(\"key\", this.cli.user.key);\n            let rid = this.ridFromURL();\n            let pw = this.passwordFromURL();\n            if (rid != \"\") this.cli.cmdJoinRoom(rid, pw, this.onJoinRoom);\n        }));\n    }\n\n    constructor(client: MultiplayerClient, modal: HTMLElement, roomTable: HTMLElement, roomCodeArea: HTMLElement, roomButton: HTMLButtonElement, roomLinkCopy: HTMLButtonElement, newRoomButton: HTMLButtonElement, newRoomInputs: HTMLDivElement, boardLoader: (board: BoardData) => void) {\n        this.cli = client;\n        this._boardLoader = boardLoader;\n\n        \n        this.cli.onHostPromotion = () => {\n            window.notif.customInfo(\"hostPromotion\", \"\", \"You were made host.\");\n        };\n\n        this.cli.onPlayerJoined = (u: UID) => {\n            window.notif.customInfo(\"playerJoined\", \"\", `Player \"${u}\" joined.`);\n        };\n        \n        this.cli.onPlayerLeft = (u: UID) => {\n            window.notif.customInfo(\"playerJoined\", \"\", `Player \"${u}\" left.`);\n        };\n\n        this.cli.onBoardReceived = () => {\n            // console.log(\"board:\", this.cli.room.board, \"host:\", this.cli.host);\n            if (this.cli.room.board == \"\" && this.cli.host) {\n                this.cli.cmdSetBoard(this.board);\n            } else if (!this.cli.host) {\n                this._boardLoader(JSON.parse(this.cli.room.board) as BoardData);\n            }\n            if (!this.cli.host) {\n                this.cli.cmdGetState();\n            }\n        };\n\n        this._modal = new Modal(modal, false);\n    }\n}\n", "import { Modal } from \"./modules/modal.js\";\nimport { notificationBox, addLoader, removeLoader } from \"./modules/common.js\";\nimport { BoardData, BoardSummary } from \"./board.js\";\n\ninterface window extends Window {\n    notif: notificationBox;\n}\n\ndeclare var window: window;\n\nexport class BoardLoader {\n    private _fileButton: HTMLButtonElement;\n    private _nytButton: HTMLButtonElement;\n    private _nytSpecific: HTMLElement;\n    private _modal: Modal;\n    private _boardList: HTMLElement;\n\n\n    private _getBoardsFunc: () => void;\n    private _downloadFunc: (date: string, then: (board: string) => void) => void;\n    private _loadFunc: (newBoard: string) => void;\n\n    private _summaries: BoardSummary[];\n\n    constructor(modal: HTMLElement, fileButton: HTMLButtonElement, nytButton: HTMLButtonElement, nytSpecific: HTMLElement, boardList: HTMLElement, getBoardsFunc: () => void, downloadFunc: (date: string, then: (board: string) => void) => void, loadFunc: (newBoard: string) => void) {\n        this._fileButton = fileButton;\n        this._nytButton = nytButton;\n        this._nytSpecific = nytSpecific;\n        this._modal = new Modal(modal, false);\n        this._boardList = boardList;\n        this._getBoardsFunc = getBoardsFunc;\n        this._downloadFunc = downloadFunc;\n        this._loadFunc = (board: string) => {\n            if (board == \"\") {\n                window.notif.customError(\"failedDownload\", \"Couldn't download board.\");\n            } else {\n                window.notif.customSuccess(\"boardDownloaded\", \"Board downloaded.\");\n            }\n            loadFunc(board);\n            this._modal.close();\n        }\n\n        this._fileButton.onclick = () => {\n            let input = document.createElement(\"input\") as HTMLInputElement;\n            input.type = \"file\";\n            input.onchange = (e: Event & { target: HTMLInputElement }) => {\n                let reader = new FileReader();\n                reader.readAsText(e.target.files[0], \"UTF-8\");\n                reader.onload = (rE: any) => {\n                    let newBoard = rE.target.result;\n                    this._loadFunc(newBoard);\n                };\n            };\n            input.click();\n        };\n\n        document.getElementById(\"load-nyt-button\").onclick = () => {\n            var strand_date = prompt(\"Date (leave empty if you want today's Strand)\");\n            var date = \"\";\n        \n            if (!strand_date || strand_date.trim() === \"\") {\n                var d = new Date();\n                var year = d.getFullYear();\n                var month = (d.getMonth() + 1).toString().padStart(2, '0');\n                var day = d.getDate().toString().padStart(2, '0'); \n                date = `${year}-${month}-${day}`;\n            } else {\n                var userDate = new Date(strand_date);\n                if (!isNaN(userDate.getTime())) {\n                    var year = userDate.getFullYear();\n                    var month = (userDate.getMonth() + 1).toString().padStart(2, '0');\n                    var day = userDate.getDate().toString().padStart(2, '0');\n                    date = `${year}-${month}-${day}`;\n                } else {\n                    alert(\"Invalid date format. Please enter a valid date in yyyy-mm-dd format.\");\n                    return;\n                }\n            }\n        \n            var url = `https://api.codetabs.com/v1/proxy/?quest=https://www.nytimes.com/svc/strands/v2/${date}.json`;\n        \n            fetch(url)\n                .then((result) => {\n                    return result.json();\n                })\n                .then((data) => {\n                    this._loadFunc(JSON.stringify(data));\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching data:\", error);\n                });\n        };\n\n        document.getElementById(\"load-today-nyt-button\").onclick = () => {\n            var d = new Date();\n            var year = d.getFullYear();\n            var month = (d.getMonth() + 1).toString().padStart(2, '0');\n            var day = d.getDate().toString().padStart(2, '0'); \n            var date = `${year}-${month}-${day}`;\n            var url = `https://api.codetabs.com/v1/proxy/?quest=https://www.nytimes.com/svc/strands/v2/${date}.json`;\n\n            fetch(url)\n                .then((result) => {                \n                    return result.json();\n                })\n                .then((data) => {\n                    this._loadFunc(JSON.stringify(data));\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching data:\", error);\n                });\n        };\n        \n        \n\n        this._nytButton.onclick = () => {\n            this._summaries = [];\n            this._boardList.textContent = ``;\n            this._getBoardsFunc();\n            this._modal.show();\n        }\n\n        let nytSpecificButton = this._nytSpecific.querySelector(\"button\") as HTMLButtonElement;\n        let nytSpecificInput = this._nytSpecific.querySelector(\"input\") as HTMLInputElement;\n        const loadSpecific = () => {\n            if (nytSpecificInput.value == \"\") return;\n            addLoader(nytSpecificButton);\n            this._downloadFunc(nytSpecificInput.value, (board: string) => {\n                removeLoader(nytSpecificButton);\n                this._loadFunc(board)\n            });\n        };\n        nytSpecificButton.onclick = loadSpecific;\n        nytSpecificInput.onkeyup = (event: KeyboardEvent) => {\n            if (event.key == \"Enter\") loadSpecific();\n        };\n    }\n\n    appendSummary = (summary: BoardSummary) => {\n        this._summaries.push(summary);\n        /*let s = document.createElement(\"tr\");\n        tr.innerHTML = `\n        <td class=\"pl-0\">${summary.date}</td>\n        <td>${summary.clue}</td>\n        <td>${summary.editor}</td>\n        <td class=\"pr-0\"><button class=\"button ~info dark:~d_info @low download-board\">Download</button></td>\n        `; */\n        let s = document.createElement(\"div\");\n        s.classList.add(\"card\", \"~neutral\", \"dark:~d_neutral\", \"@low\", \"flex\", \"flex-col\", \"items-center\", \"gap-2\");\n        s.innerHTML = `\n            <div class=\"support\">${summary.date}</div>\n            <div class=\"font-bold text-xl text-center handwriting\">${summary.clue}</div>\n            <div class=\"text-center\" title=\"Editor: ${summary.editor}\">\n                ${summary.editor}\n            </div>\n            <button class=\"button ~info dark:~d_info @high download-board\">Download</button>\n        `;\n        const dlButton = s.querySelector(\"button.download-board\") as HTMLButtonElement;\n        dlButton.onclick = () => {\n            addLoader(dlButton);\n            this._downloadFunc(summary.date, (board: string) => {\n                removeLoader(dlButton);\n                this._loadFunc(board);\n            });\n        };\n        this._boardList.appendChild(s);\n    }\n}\n", "import { Modal } from \"./modules/modal.js\";\nimport { whichAnimationEvent, notificationBox } from \"./modules/common.js\";\nimport { BoardData, BoardState, defaultBoard } from \"./board.js\";\nimport { MultiplayerClient, MultiplayerUI } from \"./multi.js\";\nimport { BoardLoader } from \"./load.js\";\n\ninterface window extends Window {\n    animationEvent: string;\n    notif: notificationBox;\n    \n}\n\ndeclare var window: window;\n\nwindow.animationEvent = whichAnimationEvent();\nwindow.notif = new notificationBox(document.getElementById(\"notification-box\") as HTMLDivElement, 5);\n\nconst EMPTY_GUESS = \"_ _ _ _ _ _\";\nconst GET_HINT = \"Get hint\";\nconst SKEW_MAX_ABS_DEG = 2; // Between -(this) and (this)deg\nconst ROT_MAX_ABS_DEG = 3; // Between -(this) and (this)deg\n\nconst SELECT_ANIMATION = \"animate-select\";\nconst SELECT_DURATION_MS = 300; // Ensure value in tailwind.config.js matches!\nexport const HIGHLIGHT_STEP_DURATION = 40;\n\nclass MessageBox {\n    private _el: HTMLElement;\n    private _timeout: number;\n    private _animate: string;\n    constructor(el: HTMLElement, animationClass = \"animate-ping2\", defaultTimeout = 1800) {\n        this._el = el;\n        this._timeout = defaultTimeout;\n        this._animate = animationClass;\n    }\n    msg = (msg: string, cssColor: string = \"\", timeout: number = -1) => {\n        if (timeout == -1) timeout = this._timeout;\n        this._el.textContent = msg;\n        this._el.onanimationend = () => {\n            this._el.textContent = ``; \n            this._el.classList.remove(this._animate);\n        };\n        this._el.style.cssText = `color: ${cssColor}; animation-duration: ${timeout}ms !important;`;\n        this._el.classList.add(this._animate);\n    }\n}\n\nfunction coordsMatch(a: number[], b: number[]): boolean {\n    return a[0] == b[0] && a[1] == b[1];\n}\n\nfunction validPositions(word: string, coords: number[][], char: string) {\n    let out: number[][] = [];\n    for (let i = 0; i < coords.length; i++) {\n        if (word.at(i) == char) {\n            out.push(coords[i]);\n        }\n    }\n    return out;\n}\n\nclass GameBoard {\n    private _el: HTMLElement;\n    private _clue: HTMLElement;\n    private _guess: HTMLElement;\n    private _board: BoardData;\n    private _w: number;\n    private _h: number;\n    private _grid: HTMLDivElement[][];\n    private _m: MultiplayerUI;\n    private _bl: BoardLoader;\n\n    private _formingGuess: boolean = false;\n    private _inHover: boolean = false;\n    private _mouseDown: boolean = false;\n    private _selected: number[][] = []; // number[2][]\n    private _clickStart: number[] = [-1, -1];\n    private _clickCurrent: number[] = [-1, -1];\n\n    private wordsToGetHint: number = 3;\n    private _wordsRemainingForHint: number = -1;\n    private _wordsFound = [];\n    private _themeWordsFound = [];\n    private _spangramFound = false;\n    private _spangramCoords: number[][] = [];\n    private _themeWordCount: number = 0;\n    private _hintButton: HTMLButtonElement;\n    private _foundText: HTMLElement;\n    \n    private _mb: MessageBox;\n\n    constructor(el: HTMLElement, clue: HTMLElement, guess: HTMLElement, wordCount: HTMLElement, hintButton: HTMLElement, messageBox: HTMLElement, board: BoardData) {\n        this._el = el;\n        this._clue = clue;\n        this._guess = guess;\n        this._mb = new MessageBox(messageBox);\n        this._foundText = wordCount;\n        this._hintButton = hintButton as HTMLButtonElement;\n        this._hintButton.innerHTML = `\n        <div class=\"progress transition-width\" style=\"width: 0%;\"></div>\n        <div class=\"mix-blend-difference text-slate-50 gethint\"></div>\n        `;\n\n        this._hintButton.onclick = () => this._useHint(false);\n\n        this._wordsRemainingForHint = this.wordsToGetHint;\n        this._m = new MultiplayerUI(\n            new MultiplayerClient(\"ws://0.0.0.0:8802\"),\n            document.getElementById(\"modal-rooms\"),\n            document.getElementById(\"room-list\"),\n            document.getElementById(\"room-code\"),\n            document.getElementById(\"rooms-button\") as HTMLButtonElement,\n            document.getElementById(\"copy-room-link\") as HTMLButtonElement,\n            document.getElementById(\"new-room\") as HTMLButtonElement,\n            document.getElementById(\"new-room-inputs\") as HTMLDivElement,\n            (board: BoardData) => {\n                this._reloadBoard(board);\n                this.render();\n            }\n        );\n\n        this._m.cli.onGuess = (x: number, y: number) => {\n            let el = this._grid[y][x];\n            this._addToGuess(el, x, y, false, false, true);\n        };\n        this._m.cli.onEndGuess = () => {\n            const wasCorrect = this._endGuess(true);\n            this.renderGuess(!wasCorrect);\n        };\n        this._m.cli.onHintUsed = () => this._useHint(true);\n        this._m.cli.onBoardRequest = (): BoardState => {\n            return {\n                themeWordsFound: this._themeWordsFound,\n                spangramFound: this._spangramFound,\n                spangramCoords: this._spangramCoords,\n                wordsToGetHint: this._wordsRemainingForHint,\n                currentGuess: this._selected\n            };\n        }\n        this._m.cli.onBoardStateThemeWord = (w: string) => {\n            this.selectThemeWordByCoords(w, this._board.themeCoords[w]);\n        };\n        this._m.cli.onBoardStateSpangram = (coords: number[][]) => {\n            this.selectSpangramByCoords(coords);\n        };\n        this._m.cli.onBoardStateWordsToGetHint = (w: number) => {\n            this._wordsRemainingForHint = w;\n            this.updateWordCount();\n        };\n\n        this._bl = new BoardLoader(\n            document.getElementById(\"modal-nyt\"),\n            document.getElementById(\"load-file\") as HTMLButtonElement,\n            document.getElementById(\"load-nyt\") as HTMLButtonElement,\n            document.getElementById(\"nyt-specific\"),\n            document.getElementById(\"board-list\"),\n            this._m.cli.cmdBoardSummaries,\n            this._m.cli.cmdDownloadBoard,\n            (newBoard: string) => {\n                let parsedBoard = JSON.parse(newBoard) as BoardData;\n                this.changeBoard(parsedBoard);\n                this._m.cli.cmdSetBoard(newBoard);\n            }\n        );\n        \n        this._m.cli.onBoardSummaryAdded = this._bl.appendSummary;\n\n        this._reloadBoard(board);\n\n        this.render();\n        this._m.connect();\n        // console.log(\"Grid:\", this._grid);\n    }\n\n    private _reloadBoard(board: BoardData) {\n        this._board = board;\n        this._themeWordCount = Object.keys(this._board.themeCoords).length;\n        this._w = this._board.startingBoard[0].length;\n        this._h = this._board.startingBoard.length;\n        this._grid = [];\n        this._selected = [];\n        this._formingGuess = false;\n        this._inHover = false;\n        this._mouseDown = false;\n        this._selected = [];\n        this._clickStart = [-1, -1];\n        this._clickCurrent = [-1, -1];\n        this._wordsRemainingForHint = this.wordsToGetHint;\n        this._wordsFound = [];\n        this._themeWordsFound = [];\n        this._spangramFound = false;\n        this._spangramCoords = [];\n\n        this._m.board = JSON.stringify(this._board);\n    }\n\n    changeBoard = (board: BoardData) => {\n        this._reloadBoard(board);\n        this.render();\n    };\n\n    private randAngle(max_abs_deg: number): number {\n        return (Math.random() - 0.5) * 2 * max_abs_deg;\n    }\n\n    private randTransform = () => {\n        return `skew(${this.randAngle(SKEW_MAX_ABS_DEG)}deg) rotate(${this.randAngle(ROT_MAX_ABS_DEG)}deg)`;\n    }\n\n    private randEllipse = () => {\n        return `s${Math.floor(Math.random() * (8)) + 1}`;\n    };\n\n    private resetChar = (el: HTMLElement, x: number, y: number) => {\n        let innerHTML = `<div style=\"transform: ${this.randTransform()};\" class=\"inner z-10 w-full h-full flex justify-center items-center ${this.randEllipse()}`;\n        if (el.classList.contains(\"valid\")) innerHTML += \" valid\";\n        if (el.classList.contains(\"selected\")) innerHTML += \" selected\";\n        if (el.classList.contains(\"hinted\")) innerHTML += \" hinted\";\n        if (el.classList.contains(\"spangram\")) innerHTML += \" spangram\";\n        innerHTML += `\"><div class=\"relative text-center\">${this._board.startingBoard[y].at(x)}</div></div>`;\n        el.innerHTML = innerHTML;\n    };\n\n    private addClass(el: HTMLElement, c: string) {\n        el.classList.add(c);\n        const inner = el.querySelector(\".inner\") as HTMLElement;\n        inner.classList.add(c, this.randEllipse());\n        inner.style.transform = this.randTransform();\n        \n    };\n    private rmClass(el: HTMLElement, c: string) {\n        el.classList.remove(c);\n        el.querySelector(\".inner\").classList.remove(c);\n    };\n\n    render = () => {\n        this._el.textContent = ``;\n        \n        this._guess.textContent = EMPTY_GUESS;\n        // pre-create grid arrays, since the page layout doesn't follow the internal representation\n        for (let y = 0; y < this._h; y++) {\n            this._grid.push([]);\n        }\n        for (let x = 0; x < this._w; x++) {\n            const col = document.createElement(\"div\") as HTMLDivElement;\n            col.classList.add(\"flex\", \"flex-col\", \"justify-between\");\n            for (let y = 0; y < this._h; y++) {\n                const char = this._board.startingBoard[y].at(x);\n                const containerEl = document.createElement(\"div\");\n                containerEl.classList.add(\"m-2\");\n                const chEl = document.createElement(\"div\");\n                chEl.setAttribute(\"data-x\", \"\"+x);\n                chEl.setAttribute(\"data-y\", \"\"+y);\n                chEl.classList.add(\"char\", \"font-bold\", \"w-8\", \"h-8\");\n                chEl.innerHTML = `<div class=\"inner z-10 w-full h-full flex justify-center items-center\"><div class=\"relative text-center\">${char}</div></div>`;\n                // containerEl.addEventListener(\"mousedown\", () => this._onMouseDown(chEl, x, y));\n                // containerEl.addEventListener(\"touchstart\", () => this._onMouseDown(chEl, x, y));\n                containerEl.addEventListener(\"pointerdown\", () => this._onMouseDown(chEl, x, y));\n                // containerEl.addEventListener(\"mousemove\", () => this._onMouseMove(chEl, x, y));\n                // containerEl.addEventListener(\"touchmove\", () => this._onMouseMove(chEl, x, y));\n                containerEl.addEventListener(\"pointermove\", (e: MouseEvent) => this._onMouseMove(e, chEl, x, y));\n                containerEl.appendChild(chEl);\n                col.appendChild(containerEl);\n                this._grid[y].push(chEl);\n            }\n            this._el.appendChild(col);\n        }\n\n        // Let go of mouse might be between elements, but we can figure out the last one touched anyway.\n        // document.addEventListener(\"mouseup\", this._onMouseUp);\n        // document.addEventListener(\"touchend\", this._onMouseUp);\n        document.addEventListener(\"pointerup\", this._onMouseUp);\n\n        this._clue.textContent = this._board.clue; \n        this.updateWordCount();\n    };\n\n    private _onMouseDown = (el: HTMLElement, x: number, y: number) => {\n        this._mouseDown = true;\n        this._inHover = false;\n        this._formingGuess = true;\n        this._clickStart = [x, y];\n        this._clickCurrent = [x, y];\n        this._addToGuess(el, x, y, false, false);\n        // console.log(\"down on\", x, \", \", y);\n    };\n    private _onMouseMove = (e: MouseEvent, el: HTMLElement, x: number, y: number) => {\n        // Note: pointermove/touchmove will fire this on the initial pressed element, so as a workaround we can calculate from its coords.\n        if (this._clickStart[0] == x && this._clickStart[1] == y) {\n            let clickEl = document.elementFromPoint(e.clientX, e.clientY);\n            // This, the child element or parent will have x and y attributes we can use\n            if (!clickEl.hasAttribute(\"data-x\")) {\n                if (clickEl.parentElement.hasAttribute(\"data-x\")) clickEl = clickEl.parentElement;\n                else if (clickEl.childElementCount != 0 && clickEl.children[0].hasAttribute(\"data-x\")) clickEl = clickEl.children[0];\n            }\n            if (!clickEl.hasAttribute(\"data-x\")) return;\n            x = +(clickEl.getAttribute(\"data-x\"));\n            y = +(clickEl.getAttribute(\"data-y\"));\n            el = clickEl as HTMLElement;\n        }\n        if (!this._mouseDown || !this._formingGuess || (this._clickCurrent[0] == x && this._clickCurrent[1] == y)) return;\n        this._clickCurrent = [x, y];\n        // console.log(\"move over\", x, \", \", y);\n        if (this._clickStart[0] != x || this._clickStart[1] != y) {\n            this._inHover = true;\n            this._addToGuess(el, x, y, false, true);\n        }\n    };\n    private _onMouseUp = () => {\n        if (!this._formingGuess) return;\n        const x = this._clickCurrent[0];\n        const y = this._clickCurrent[1];\n        const el = this._grid[y][x];\n        this._mouseDown = false;\n        // console.log(\"up on\", x, \", \", y, \"was drag:\", this._inHover);\n        if (this._inHover) {\n            this._addToGuess(el, x, y, true, true);\n        }\n    };\n\n    private _addToGuess(el: HTMLElement, x: number, y: number, end: boolean, drag: boolean, remote: boolean = false) {\n        if (el.classList.contains(\"valid\") || el.classList.contains(\"spangram\")) return;\n        if (!remote) this._m.cli.cmdGuess(x, y);\n        let validity = this.validNextChar(el, x, y);\n        // console.log(\"clicked\", el.textContent, `at y,x ${y},${x}, validity: ${validity}, end: ${end}`);\n        if (validity == 2 || end) {\n            if (!remote) this._endGuess(remote);\n        } else if (validity == 0) {\n            this._deselect(el, x, y, !drag);\n        } else if (validity == -1) {\n            this._clear();\n            this.append(x, y, el);\n        } else if (validity == 1) {\n            this.append(x, y, el);\n        }\n    }\n\n    private _deselect(el: HTMLElement, x: number, y: number, inclusive: boolean = true) {\n        let newSelected = [];\n        let foundEnd = false;\n        for (let i = 0; i < this._selected.length; i++) {\n            let yx = this._selected[i];\n            if (inclusive && !foundEnd && yx[0] == y && yx[1] == x) {\n                foundEnd = true;\n            }\n            if (!foundEnd) {\n                newSelected.push(yx);\n            } else {\n                this.rmClass(this._grid[yx[0]][yx[1]], \"selected\");\n                this.resetChar(this._grid[yx[0]][yx[1]], yx[1], yx[0]);\n            }\n            if (!inclusive && !foundEnd && yx[0] == y && yx[1] == x) {\n                foundEnd = true;\n            }\n        }\n        this._selected = newSelected;\n        this.renderGuess();\n    };\n\n    private _clear(keepHints = true, keepConnectors = false, wrongGuess: boolean = false) {\n        // console.log(\"clear!\");\n        for (let i = 0; i < this._selected.length; i++) {\n            let yx = this._selected[i];\n            this.rmClass(this._grid[yx[0]][yx[1]], \"selected\");\n            if (!keepHints) {\n                this.rmClass(this._grid[yx[0]][yx[1]], \"hinted\");\n            }\n            if (!keepConnectors) {\n                this.resetChar(this._grid[yx[0]][yx[1]], yx[1], yx[0]);\n            }\n        }\n        this._selected = [];\n        this.renderGuess(wrongGuess);\n    };\n\n    // 2: user clicked the last char, confirming their guess. 0: previous symbol in current word, 1 = valid next word, -1 = not valid at all.\n    private validNextChar(el: HTMLElement, x: number, y: number): number {\n        if (this._selected.length == 0) return 1;\n        let lastChar = this._selected[this._selected.length-1];\n        for (let i = 0; i < this._selected.length; i++) {\n            if (this._selected[i][0] == y && this._selected[i][1] == x) {\n                if (i == this._selected.length-1) return 2;\n                return 0;\n            };\n        }\n        let valid = false;\n        for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n                if (lastChar[0]+dy == y && lastChar[1]+dx == x) {\n                    return 1;\n                }\n            }\n        }\n        return -1;\n    };\n\n    private _collectGuess = (): string => {\n        let word = \"\";\n        for (let i = 0; i < this._selected.length; i++) {\n            word += this._board.startingBoard[this._selected[i][0]][this._selected[i][1]];\n        }\n        return word;\n    };\n\n    // 0 = Invalid. 1 = Valid word, you get a point towards hints. 2 = Valid theme word, 3 = Valid spangram.\n    private validateGuess(word: string): number {\n        let ret = 0;\n        if (this._board.solutions.includes(word)) ret += 1;\n        // Spangram is sometimes a combination of multiple \"solutions\", so might not be in the list as-is.\n        // else return ret;\n        if (this._board.spangram == word) {\n            // ret += 2;\n            ret = 3;\n            return ret;\n        }\n        if (ret == 0) return ret;\n        if (word in this._board.themeCoords) {\n            let coords = this._board.themeCoords[word];\n            let match = true;\n            for (let i = 0; i < coords.length; i++) {\n                // NOTE: As illustrated in official board 2024-04-27 with \"QUEEN\", where thera are multiple valid guess \"paths\" along the same board positions, any are valid.\n                // Hence we collect all possible positions and check them.\n                let positions = validPositions(word, coords, word.at(i));\n                let inAValidPosition = false;\n                for (let j = 0; j < positions.length; j++) {\n                    if (coordsMatch(coords[i], positions[j])) {\n                        inAValidPosition = true;\n                        break;\n                    }\n                }\n                if (!inAValidPosition) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) ret += 1;\n        }\n        return ret;\n    }\n\n    private addConnector(el: HTMLElement, elCoord: number[], prevCoord: number[]) {\n        let deltaY = elCoord[0] - prevCoord[0];\n        let deltaX = elCoord[1] - prevCoord[1];\n        let con = document.createElement(\"div\");\n        con.classList.add(\"connector\");\n        let conClass = \"\";\n        if (deltaY > 0) conClass += \"u\";\n        else if (deltaY < 0) conClass += \"d\";\n        if (deltaX > 0) conClass += \"l\";\n        else if (deltaX < 0) conClass += \"r\";\n        if (conClass != \"\") con.classList.add(conClass);\n\n        this.resetChar(el, elCoord[1], elCoord[0]);\n        el.appendChild(con);\n    }\n\n    private append(x: number, y: number, el: HTMLElement) {\n        let needsConnector = this._selected.length > 0;\n        this._selected.push([y, x]);\n        this.addClass(el, \"selected\");\n        if (needsConnector) {\n            this.addConnector(el, [y, x], this._selected[this._selected.length-2]);\n        }\n        this.animateSelected(el);\n        this.renderGuess();\n    }\n\n    private _endGuess = (remote: boolean = false): boolean => {\n        // console.log(\"endGuess\");\n        if (!remote) this._m.cli.cmdEndGuess();\n        this._formingGuess = false;\n        this._inHover = false;\n        if (this._selected.length == 1) return;\n        let word = this._collectGuess();\n        let guessValidity = this.validateGuess(word);\n        if (guessValidity == 1) {\n            let wrong = false;\n            if (!this._wordsFound.includes(word)) {\n                this._wordsFound.push(word);\n                this._wordsRemainingForHint -= 1;\n            } else {\n                this._mb.msg(\"Already done\");\n                wrong = true;\n            }\n            this._clear(true, false, wrong);\n            this.updateWordCount();\n        } else if (guessValidity == 2) {\n            this._mb.msg(\"Nice!\", \"var(--color-valid)\");\n            this.selectThemeWordByCoords(word, this._selected);\n        } else if (guessValidity == 3) {\n            this._mb.msg(\"Spangram!\", \"var(--color-spangram)\");\n            this.selectSpangramByCoords(this._selected);\n        } else {\n            this._clear(true, false, true);\n        }\n    }\n\n    animateSelected = (el: HTMLElement) => {\n        let subEl = el.querySelector(\".inner\") as HTMLElement;\n        setTimeout(() => {\n            subEl.classList.remove(SELECT_ANIMATION);\n        }, SELECT_DURATION_MS);\n        subEl.classList.add(SELECT_ANIMATION)\n    }\n\n    selectThemeWordByCoords = (word: string, coords: number[][]) => {\n        this._themeWordsFound.push(word)\n        this.addClassByCoords(coords, \"valid\", this.updateWordCount);\n    }\n    \n\n    selectSpangramByCoords = (coords: number[][]) => {\n        this._spangramFound = true;\n        this._spangramCoords = coords;\n        this.addClassByCoords(coords, \"spangram\");\n    }\n\n    addClassByCoords = (coords: number[][], c: string, then: () => void = () => {}) => {\n        let i = 0;\n        const selectFunc = () => {\n            const el = this._grid[coords[i][0]][coords[i][1]]\n            this.addClass(el, c);\n            if (i != 0) {\n                this.addConnector(el, coords[i], coords[i-1]);\n            }\n            this.animateSelected(el);\n            i++;\n            if (i != coords.length) setTimeout(selectFunc, HIGHLIGHT_STEP_DURATION);\n            else {\n                this._clear(true, true)\n                then();\n            }\n        }; \n        selectFunc();\n    };\n\n    updateWordCount = () => {\n        if (this._themeWordsFound.length == this._themeWordCount && this._spangramFound) {\n            this._foundText.textContent = \"You win!\";\n        } else {\n            this._foundText.textContent = `${this._themeWordsFound.length}/${this._themeWordCount} theme words found.`;\n        }\n\n        let fillPct = this.wordsToGetHint - (this._wordsRemainingForHint < 0 ? 0 : this._wordsRemainingForHint);\n        fillPct = (fillPct / this.wordsToGetHint) * 100;\n        this._hintButton.disabled = this._wordsRemainingForHint > 0 || this._themeWordsFound.length == this._themeWordCount;\n\n        let textContent = GET_HINT;\n        this._hintButton.title = \"\";\n        if (this._wordsRemainingForHint > 0) {\n            // textContent += ` (${this._wordsRemainingForHint} words remaining)`;\n            this._hintButton.title = `${this._wordsRemainingForHint} word${this._wordsRemainingForHint != 1 ? \"s\" : \"\"} remaining`;\n            this._hintButton.disabled = true;\n        } else { this._hintButton.disabled = false; }\n        const pBar = this._hintButton.querySelector(\".progress\") as HTMLElement;\n        const ghText = this._hintButton.querySelector(\".gethint\") as HTMLElement;\n        pBar.style.width = `${fillPct}%`;\n        ghText.textContent = textContent;\n    }\n\n    renderGuess = (wrongGuess: boolean = false) => {\n        if (this._selected.length == 0) {\n            if (wrongGuess && this._guess.textContent != EMPTY_GUESS) {\n                const subEl = document.createElement(\"div\");\n                subEl.classList.add(\"animate-nod\");\n                subEl.onanimationend = () => {\n                    subEl.classList.remove(\"animate-nod\");\n                    subEl.onanimationend = () => {};\n                    setTimeout(() => {\n                        this._guess.innerHTML = `<div class=\"animate-slide-up\">${EMPTY_GUESS}</div>`;\n                    }, HIGHLIGHT_STEP_DURATION);\n                };\n                subEl.textContent = this._guess.textContent;\n                this._guess.replaceChildren(subEl);\n            } else {\n                this._guess.innerHTML = `<div class=\"animate-slide-up\">${EMPTY_GUESS}</div>`;\n            }\n        } else if (this._selected.length == 1) {\n            const n = this._collectGuess();\n            this._guess.innerHTML = `<div class=\"animate-slide-up\">${n}</div>`;\n        } else {\n            const og = this._guess.textContent;\n            const n = this._collectGuess();\n            const diff = n.length - og.length;\n            console.log(\"diff:\", diff);\n            if (og == EMPTY_GUESS) this._guess.textContent = n;\n            else if (diff > 0) {\n                this._guess.textContent = n.substring(0, n.length-diff);\n                let i = 0;\n                const appendFunc = () => {\n                    const animEl = document.createElement(\"div\");\n                    animEl.classList.add(\"animate-slide-up\");\n                    animEl.textContent = n.at(n.length-1-i);\n                    this._guess.appendChild(animEl);\n                    i++;\n                    if (i < diff) setTimeout(appendFunc, 50);\n                };\n                appendFunc();\n            } else if (diff < 0) {\n                this._guess.textContent = n;\n            }\n        }\n    };\n\n    private _useHint = (remote: boolean = false) => {\n        if (!remote) this._m.cli.cmdHint();\n        let themeWord = \"\";\n        for (const tw in this._board.themeCoords) {\n            if (this._themeWordsFound.includes(tw)) continue;\n            themeWord = tw;\n            break;\n        }\n        for (const c of this._board.themeCoords[themeWord]) {\n            this.addClass(this._grid[c[0]][c[1]], \"hinted\");\n        }\n\n        this._wordsRemainingForHint = this.wordsToGetHint;\n        this.updateWordCount();\n    }\n}\n\n// const date = new Date();\n// const fname = date.getFullYear() + \"-\" + String(date.getMonth() + 1).padStart(2, \"0\") + \"-\" + String(date.getDate()).padStart(2, \"0\") + \".json\";\n// console.log(fname);\n// \n// const url = \"https://www.nytimes.com/games-assets/strands/\" + fname;\n// \n// let currentBoard: BoardData;\n// fetch(url).then(res => res.json()).then(out => {\n//     currentBoard = out;\n//     console.log(currentBoard);\n// });\n\nlet b = new GameBoard(document.getElementById(\"board\"), document.getElementById(\"clue\"), document.getElementById(\"guess\"), document.getElementById(\"found-text\"), document.getElementById(\"hint-button\"), document.getElementById(\"messagebox\"), defaultBoard);\n"],
  "mappings": "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",
  "names": ["notificationBox", "box", "timeout", "message", "noti", "error", "closeButton", "bold", "type", "previousNoti", "whichAnimationEvent", "addLoader", "el", "small", "relative", "dot", "removeLoader", "unicodeB64Decode", "s", "decoded", "byteArray", "m", "unicodeB64Encode", "encoded", "bin", "defaultBoard", "Modal", "modal", "important", "event", "listenerFunc", "closeButton", "f", "auth", "u", "oPing", "oHello", "oHelloExistingUser", "u", "auth", "oNewRoom", "b64Name", "b64Password", "oListRooms", "oJoinRoom", "r", "oLeaveRoom", "oSetBoard", "b64Board", "oGetBoard", "oDownloadBoard", "date", "oBoardSummaries", "oGuess", "x", "y", "oEndGuess", "oHint", "oThemeWord", "w", "oSpangram", "coords", "out", "pair", "oCurrentGuess", "oWordsToGetHint", "oGetState", "oForward", "fu", "msg", "MultiplayerClient", "url", "success", "x", "y", "w", "coords", "u", "summary", "then", "oPing", "uid", "key", "newUser", "oHelloExistingUser", "oHello", "args", "nickname", "password", "oNewRoom", "unicodeB64Encode", "rid", "oJoinRoom", "nick", "oLeaveRoom", "oListRooms", "nickPass", "unicodeB64Decode", "board", "oSetBoard", "oGetBoard", "oGuess", "oEndGuess", "oHint", "oGetState", "date", "oDownloadBoard", "oBoardSummaries", "target", "bd", "oForward", "oThemeWord", "oSpangram", "oCurrentGuess", "oWordsToGetHint", "pairStrings", "i", "split", "sc", "addLoop", "HIGHLIGHT_STEP_DURATION", "MultiplayerUI", "client", "modal", "roomTable", "roomCodeArea", "roomButton", "roomLinkCopy", "newRoomButton", "newRoomInputs", "boardLoader", "r", "p", "b64Password", "ukey", "pw", "Modal", "BoardLoader", "modal", "fileButton", "nytButton", "nytSpecific", "boardList", "getBoardsFunc", "downloadFunc", "loadFunc", "summary", "s", "dlButton", "addLoader", "board", "removeLoader", "Modal", "input", "e", "reader", "rE", "newBoard", "strand_date", "date", "d", "year", "month", "day", "userDate", "url", "result", "data", "error", "nytSpecificButton", "nytSpecificInput", "loadSpecific", "event", "whichAnimationEvent", "notificationBox", "EMPTY_GUESS", "GET_HINT", "SKEW_MAX_ABS_DEG", "ROT_MAX_ABS_DEG", "SELECT_ANIMATION", "SELECT_DURATION_MS", "HIGHLIGHT_STEP_DURATION", "MessageBox", "el", "animationClass", "defaultTimeout", "msg", "cssColor", "timeout", "coordsMatch", "a", "b", "validPositions", "word", "coords", "char", "out", "i", "GameBoard", "clue", "guess", "wordCount", "hintButton", "messageBox", "board", "x", "y", "innerHTML", "col", "containerEl", "chEl", "e", "clickEl", "remote", "guessValidity", "wrong", "subEl", "c", "then", "selectFunc", "fillPct", "textContent", "pBar", "ghText", "wrongGuess", "n", "og", "diff", "appendFunc", "animEl", "themeWord", "tw", "MultiplayerUI", "MultiplayerClient", "wasCorrect", "w", "BoardLoader", "newBoard", "parsedBoard", "max_abs_deg", "inner", "end", "drag", "validity", "inclusive", "newSelected", "foundEnd", "yx", "keepHints", "keepConnectors", "lastChar", "valid", "dy", "dx", "ret", "match", "positions", "inAValidPosition", "j", "elCoord", "prevCoord", "deltaY", "deltaX", "con", "conClass", "needsConnector", "defaultBoard"]
}
